<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"
>
    <!-- 1.启动SpringMVC注解 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 文件流转换器 -->
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 优先使用的媒体类型，为了解决IE浏览器下，返回JSON数据的下载问题 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 2.扫描 -->
    <context:component-scan base-package="com.gobha.**.web" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>
    <!-- 3.JSP请求转发的视图解析器 -->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
        <!-- JSTL视图 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <!-- 排序 -->
        <property name="order" value="10" />
    </bean>
    <!-- 4.配置静态资源的排除方案,使用简单方式 -->
    <mvc:default-servlet-handler default-servlet-name="default" />
    <!-- 5.配置文件上传的解析器,需要注意ID问题 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 文件上传的编码格式 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 配置文件上传的大小 -->
        <property name="maxUploadSize" value="20971520" />
        <!-- 配置文件上传缓存 -->
        <property name="maxInMemorySize" value="2048" />
        <!-- 配置文件上传的延迟操作，提高效率 -->
        <property name="resolveLazily" value="true" />
    </bean>
    <!-- 6.配置统一简单异常处理,匹配的映射为RuntimeException/Exception,后续可以添加其他注解版本 -->
    <bean id="simpleExceptionCacheResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="jsp/error" />
        <property name="exceptionAttribute" value="ex" />
        <property name="exceptionMappings">
            <props>
                <prop key="ArithmeticException">jsp/error</prop><!-- /WEB-INF/jsp/error.jsp -->
                <prop key="NullPointerException">jsp/error</prop>
            </props>
        </property>
    </bean>
    <!-- 7.Session拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/sys/**" />
            <mvc:exclude-mapping path="/sys/login" />
            <bean class="com.gobha.interceptor.SessionInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
